X_train.shape == torch.Size([25400, 7])
Y_train.shape == torch.Size([25400, 1])
Empty orthant is orthant number 99
X_test.shape == torch.Size([128, 200, 7])
Y_test.shape == torch.Size([128, 200, 1])
Orthants neighboring the empty orthant are: [35, 67, 97, 98, 103, 107, 115]
X_empty_0.shape == torch.Size([100, 7])
X_empty_1.shape == torch.Size([100, 7])
Cross-validating across 108 models.

[1/108] Width: 32, lr: 0.0001, lambda: 1e-05 ==> score: 0.450893
[2/108] Width: 32, lr: 0.0001, lambda: 0.0001 ==> score: 0.486607
[3/108] Width: 32, lr: 0.0001, lambda: 0.001 ==> score: 0.473214
[4/108] Width: 32, lr: 0.0001, lambda: 0.01 ==> score: 0.500000
[5/108] Width: 32, lr: 0.0001, lambda: 0.1 ==> score: 0.500000
[6/108] Width: 32, lr: 0.0001, lambda: 1.0 ==> score: 0.526786
[7/108] Width: 32, lr: 0.0001, lambda: 10.0 ==> score: 0.513393
[8/108] Width: 32, lr: 0.0001, lambda: 100.0 ==> score: 0.513393
[9/108] Width: 32, lr: 0.0001, lambda: 1000.0 ==> score: 0.526786
[10/108] Width: 32, lr: 0.0001, lambda: 10000.0 ==> score: 0.486607
[11/108] Width: 32, lr: 0.0001, lambda: 100000.0 ==> score: 0.486607
[12/108] Width: 32, lr: 0.0001, lambda: 0.0 ==> score: 0.526786
[13/108] Width: 32, lr: 0.001, lambda: 1e-05 ==> score: 0.562500
[14/108] Width: 32, lr: 0.001, lambda: 0.0001 ==> score: 0.602679
[15/108] Width: 32, lr: 0.001, lambda: 0.001 ==> score: 0.526786
[16/108] Width: 32, lr: 0.001, lambda: 0.01 ==> score: 0.500000
[17/108] Width: 32, lr: 0.001, lambda: 0.1 ==> score: 0.500000
[18/108] Width: 32, lr: 0.001, lambda: 1.0 ==> score: 0.500000
[19/108] Width: 32, lr: 0.001, lambda: 10.0 ==> score: 0.513393
[20/108] Width: 32, lr: 0.001, lambda: 100.0 ==> score: 0.526786
[21/108] Width: 32, lr: 0.001, lambda: 1000.0 ==> score: 0.500000
[22/108] Width: 32, lr: 0.001, lambda: 10000.0 ==> score: 0.513393
[23/108] Width: 32, lr: 0.001, lambda: 100000.0 ==> score: 0.526786
[24/108] Width: 32, lr: 0.001, lambda: 0.0 ==> score: 0.678571
[25/108] Width: 32, lr: 0.01, lambda: 1e-05 ==> score: 0.486607
[26/108] Width: 32, lr: 0.01, lambda: 0.0001 ==> score: 0.500000
[27/108] Width: 32, lr: 0.01, lambda: 0.001 ==> score: 0.500000
[28/108] Width: 32, lr: 0.01, lambda: 0.01 ==> score: 0.513393
[29/108] Width: 32, lr: 0.01, lambda: 0.1 ==> score: 0.513393
[30/108] Width: 32, lr: 0.01, lambda: 1.0 ==> score: 0.500000
[31/108] Width: 32, lr: 0.01, lambda: 10.0 ==> score: 0.513393
[32/108] Width: 32, lr: 0.01, lambda: 100.0 ==> score: 0.500000
[33/108] Width: 32, lr: 0.01, lambda: 1000.0 ==> score: 0.500000
[34/108] Width: 32, lr: 0.01, lambda: 10000.0 ==> score: 0.500000
[35/108] Width: 32, lr: 0.01, lambda: 100000.0 ==> score: 0.513393
[36/108] Width: 32, lr: 0.01, lambda: 0.0 ==> score: 0.486607
[37/108] Width: 64, lr: 0.0001, lambda: 1e-05 ==> score: 0.473214
[38/108] Width: 64, lr: 0.0001, lambda: 0.0001 ==> score: 0.526786
[39/108] Width: 64, lr: 0.0001, lambda: 0.001 ==> score: 0.473214
[40/108] Width: 64, lr: 0.0001, lambda: 0.01 ==> score: 0.473214
[41/108] Width: 64, lr: 0.0001, lambda: 0.1 ==> score: 0.486607
[42/108] Width: 64, lr: 0.0001, lambda: 1.0 ==> score: 0.500000
[43/108] Width: 64, lr: 0.0001, lambda: 10.0 ==> score: 0.513393
[44/108] Width: 64, lr: 0.0001, lambda: 100.0 ==> score: 0.500000
[45/108] Width: 64, lr: 0.0001, lambda: 1000.0 ==> score: 0.513393
[46/108] Width: 64, lr: 0.0001, lambda: 10000.0 ==> score: 0.486607
[47/108] Width: 64, lr: 0.0001, lambda: 100000.0 ==> score: 0.526786
[48/108] Width: 64, lr: 0.0001, lambda: 0.0 ==> score: 0.526786
[49/108] Width: 64, lr: 0.001, lambda: 1e-05 ==> score: 0.678571
[50/108] Width: 64, lr: 0.001, lambda: 0.0001 ==> score: 0.500000
[51/108] Width: 64, lr: 0.001, lambda: 0.001 ==> score: 0.526786
[52/108] Width: 64, lr: 0.001, lambda: 0.01 ==> score: 0.473214
[53/108] Width: 64, lr: 0.001, lambda: 0.1 ==> score: 0.500000
[54/108] Width: 64, lr: 0.001, lambda: 1.0 ==> score: 0.473214
[55/108] Width: 64, lr: 0.001, lambda: 10.0 ==> score: 0.513393
[56/108] Width: 64, lr: 0.001, lambda: 100.0 ==> score: 0.473214
[57/108] Width: 64, lr: 0.001, lambda: 1000.0 ==> score: 0.500000
[58/108] Width: 64, lr: 0.001, lambda: 10000.0 ==> score: 0.526786
[59/108] Width: 64, lr: 0.001, lambda: 100000.0 ==> score: 0.500000
[60/108] Width: 64, lr: 0.001, lambda: 0.0 ==> score: 0.491071
[61/108] Width: 64, lr: 0.01, lambda: 1e-05 ==> score: 0.486607
[62/108] Width: 64, lr: 0.01, lambda: 0.0001 ==> score: 0.513393
[63/108] Width: 64, lr: 0.01, lambda: 0.001 ==> score: 0.513393
[64/108] Width: 64, lr: 0.01, lambda: 0.01 ==> score: 0.446429
[65/108] Width: 64, lr: 0.01, lambda: 0.1 ==> score: 0.540179
[66/108] Width: 64, lr: 0.01, lambda: 1.0 ==> score: 0.513393
[67/108] Width: 64, lr: 0.01, lambda: 10.0 ==> score: 0.500000
[68/108] Width: 64, lr: 0.01, lambda: 100.0 ==> score: 0.473214
[69/108] Width: 64, lr: 0.01, lambda: 1000.0 ==> score: 0.526786
[70/108] Width: 64, lr: 0.01, lambda: 10000.0 ==> score: 0.486607
[71/108] Width: 64, lr: 0.01, lambda: 100000.0 ==> score: 0.526786
[72/108] Width: 64, lr: 0.01, lambda: 0.0 ==> score: 0.500000
[73/108] Width: 128, lr: 0.0001, lambda: 1e-05 ==> score: 0.651786
[74/108] Width: 128, lr: 0.0001, lambda: 0.0001 ==> score: 0.500000
[75/108] Width: 128, lr: 0.0001, lambda: 0.001 ==> score: 0.500000
[76/108] Width: 128, lr: 0.0001, lambda: 0.01 ==> score: 0.513393
[77/108] Width: 128, lr: 0.0001, lambda: 0.1 ==> score: 0.526786
[78/108] Width: 128, lr: 0.0001, lambda: 1.0 ==> score: 0.540179
[79/108] Width: 128, lr: 0.0001, lambda: 10.0 ==> score: 0.500000
[80/108] Width: 128, lr: 0.0001, lambda: 100.0 ==> score: 0.500000
[81/108] Width: 128, lr: 0.0001, lambda: 1000.0 ==> score: 0.540179
[82/108] Width: 128, lr: 0.0001, lambda: 10000.0 ==> score: 0.459821
[83/108] Width: 128, lr: 0.0001, lambda: 100000.0 ==> score: 0.459821
[84/108] Width: 128, lr: 0.0001, lambda: 0.0 ==> score: 0.473214
[85/108] Width: 128, lr: 0.001, lambda: 1e-05 ==> score: 0.495536
[86/108] Width: 128, lr: 0.001, lambda: 0.0001 ==> score: 0.513393
[87/108] Width: 128, lr: 0.001, lambda: 0.001 ==> score: 0.513393
[88/108] Width: 128, lr: 0.001, lambda: 0.01 ==> score: 0.473214
[89/108] Width: 128, lr: 0.001, lambda: 0.1 ==> score: 0.513393
[90/108] Width: 128, lr: 0.001, lambda: 1.0 ==> score: 0.486607
[91/108] Width: 128, lr: 0.001, lambda: 10.0 ==> score: 0.500000
[92/108] Width: 128, lr: 0.001, lambda: 100.0 ==> score: 0.473214
[93/108] Width: 128, lr: 0.001, lambda: 1000.0 ==> score: 0.486607
[94/108] Width: 128, lr: 0.001, lambda: 10000.0 ==> score: 0.513393
[95/108] Width: 128, lr: 0.001, lambda: 100000.0 ==> score: 0.500000
[96/108] Width: 128, lr: 0.001, lambda: 0.0 ==> score: 0.486607
[97/108] Width: 128, lr: 0.01, lambda: 1e-05 ==> score: 0.500000
[98/108] Width: 128, lr: 0.01, lambda: 0.0001 ==> score: 0.500000
[99/108] Width: 128, lr: 0.01, lambda: 0.001 ==> score: 0.513393
[100/108] Width: 128, lr: 0.01, lambda: 0.01 ==> score: 0.526786
[101/108] Width: 128, lr: 0.01, lambda: 0.1 ==> score: 0.513393
[102/108] Width: 128, lr: 0.01, lambda: 1.0 ==> score: 0.513393
[103/108] Width: 128, lr: 0.01, lambda: 10.0 ==> score: 0.513393
[104/108] Width: 128, lr: 0.01, lambda: 100.0 ==> score: 0.500000
[105/108] Width: 128, lr: 0.01, lambda: 1000.0 ==> score: 0.513393
[106/108] Width: 128, lr: 0.01, lambda: 10000.0 ==> score: 0.473214
[107/108] Width: 128, lr: 0.01, lambda: 100000.0 ==> score: 0.500000
[108/108] Width: 128, lr: 0.01, lambda: 0.0 ==> score: 0.513393

Best validation score after 10 epochs: 0.678571
Best configuration: width: 32, lr: 0.001, lambda: 0.0
Average accuracy across all orthants: 0.843554675579071
Accuracy in empty orthant: 0.75
Cross-validation across 11 models.

[1/11]	C:1e-05, train score:0.5690944881889763, val score:0.55
[2/11]	C:0.0001, train score:0.8316141732283464, val score:0.805
[3/11]	C:0.001, train score:0.8640944881889764, val score:0.795
[4/11]	C:0.01, train score:0.8880314960629921, val score:0.77
[5/11]	C:0.1, train score:0.9037007874015748, val score:0.785
[6/11]	C:1.0, train score:0.9141732283464566, val score:0.775
[7/11]	C:10.0, train score:0.9008661417322834, val score:0.73
[8/11]	C:100.0, train score:0.8836220472440944, val score:0.8
[9/11]	C:1000.0, train score:0.8632283464566929, val score:0.75
[10/11]	C:10000.0, train score:0.8561023622047244, val score:0.825
[11/11]	C:100000.0, train score:0.8479527559055118, val score:0.685

Best validation accuracy: 0.825, for C = 10000.0
Train accuracy with NTK: 0.8761023622047244
Validation accuracy with NTK: 0.615
Average accuracy across all orthants: 0.8457812499999999
Accuracy in empty orthant: 0.615
