X.shape == torch.Size([10000, 100])
scale_factor == 0.0473104864358902
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.598152
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.598167
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.598307
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.600103
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.613092
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.608973
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.603733
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.598151
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.636126
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.635789
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.630117
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.596558
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.590065
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.593577
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.596718
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.636209
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.646117
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.645497
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.637828
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.619412
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.588765
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.593396
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.596860
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.646129
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.341434
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.325668
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.641350
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.625117
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.589664
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.599119
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.617470
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.340275
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.592833
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.592836
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.592872
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.593558
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.602783
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.602874
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.600483
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.592833
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.649565
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.649064
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.644154
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.605291
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.592918
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.597247
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.600047
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.649593
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.656216
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.656724
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.647201
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.629287
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.594787
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.597089
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.600362
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.655595
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.335524
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.318276
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.650972
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.633094
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.595738
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.605669
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.638188
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.335915
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.603096
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.603043
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.602540
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.597503
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.594402
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.596973
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.598910
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.603102
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.653682
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.653261
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.648962
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.606612
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.592490
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.596329
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.598909
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.653707
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.660747
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.661510
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.655512
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.631607
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.595236
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.596131
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.599230
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.660577
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.333338
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.319997
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.659251
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.640873
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.596537
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.630183
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.770161
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.318139
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.601930
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.601832
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.600559
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.589906
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.583924
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.588106
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.588928
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.601938
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.633478
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.633107
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.629022
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.590130
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.580196
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.585823
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.588960
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.633450
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.634950
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.635775
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.627599
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.613541
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.581342
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.585772
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.589774
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.635679
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.370128
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.372122
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.631535
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.613854
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.581738
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.690786
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-1.174204
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.353161

Best validation score after 20 epochs: -0.318139. Best configuration:
Width:512, lr:1.0, w_d:0.0
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.0034221275709569454, score_val == -0.00655277818441391, score_test == -0.017425594851374626
Best params for NTK: {'C': 1.0}
Best score for NTK: -0.03869134487510592
Best params for RBF: {'C': 1.0, 'gamma': 'scale'}
Best score for RBF: -0.5363746518260855
Best kernel: ntk
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.0014430410711809745, score_val == 0.027922970028241886, score_test == 0.055395745602775506
