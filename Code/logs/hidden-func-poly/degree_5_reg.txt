X.shape == torch.Size([10000, 100])
scale_factor == 0.0473104864358902
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-1.049017
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-1.049030
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-1.049183
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-1.051042
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-1.053977
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-1.048882
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-1.044620
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-1.049015
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-1.007338
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-1.008477
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-1.018549
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-1.045791
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-1.043679
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-1.041083
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-1.041202
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-1.007204
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.668570
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.647264
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.501829
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-1.039603
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-1.040342
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-1.041062
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-1.041374
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.670236
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.008716
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.157614
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.501286
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-1.039480
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-1.040306
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-1.050443
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-1.060243
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.005748
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-1.049349
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-1.049349
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-1.049372
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-1.049897
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-1.050574
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-1.048725
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-1.046734
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-1.049349
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-1.011889
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-1.013107
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-1.023696
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-1.047282
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-1.046813
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-1.046406
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-1.046538
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-1.011750
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.674694
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.652384
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.503881
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-1.044866
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-1.045646
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-1.046363
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-1.046933
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.678593
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.005471
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.085419
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.493973
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-1.044691
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-1.045464
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-1.077048
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-1.098237
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.007559
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-1.049870
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-1.049858
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-1.049756
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-1.049378
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-1.049871
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-1.050224
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-1.050652
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-1.049871
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-1.007751
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-1.009292
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-1.022570
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-1.049258
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-1.049682
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-1.050489
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-1.050646
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-1.007571
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.696951
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.669374
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.517168
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-1.048377
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-1.049536
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-1.050394
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-1.051507
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.700190
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.014392
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.088676
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.534392
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-1.047985
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-1.048935
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-1.106777
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-1.177313
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.009198
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-1.053514
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-1.053546
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-1.053874
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-1.056654
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-1.061479
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-1.061918
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-1.061475
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-1.053510
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.979364
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.982487
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-1.009134
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-1.061109
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-1.060906
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-1.061290
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-1.061494
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.979022
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.780210
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.741155
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.559252
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-1.058694
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-1.060318
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-1.061554
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-1.063106
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.785908
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.011828
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.099679
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.549005
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-1.060135
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-1.063367
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-1.201402
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-1.377238
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.006192

Best validation score after 20 epochs: -0.005471. Best configuration:
Width:256, lr:1.0, w_d:0.0001
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.00932551734149456, score_val == -0.0030683332588523626, score_test == -0.0032642788719385862
Best params for NTK: {'C': 1.0}
Best score for NTK: -0.008906718390736574
Best params for RBF: {'C': 0.1, 'gamma': 'scale'}
Best score for RBF: -0.5712060205315106
Best kernel: ntk
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.006341541241331676, score_val == 0.0029372725873253874, score_test == 0.0023006251623556837
