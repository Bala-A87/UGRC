X.shape == torch.Size([10000, 100])
scale_factor == 0.0473104864358902
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-1.351506
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-1.351852
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-1.354908
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-1.382975
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-1.596847
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-1.721583
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-1.803415
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-1.351485
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-1.156097
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-1.155462
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-1.146875
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-1.083017
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-1.359581
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-1.741327
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-1.846538
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-1.156063
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-1.174414
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-1.173667
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-1.160416
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-1.090526
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-1.179260
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-1.739029
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-1.847699
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-1.173233
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.008422
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.006753
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-1.164856
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-1.102589
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-1.170298
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-1.814138
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-1.985878
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.010529
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-1.219410
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-1.219881
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-1.224632
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-1.268417
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-1.622052
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-1.748797
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-1.831083
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-1.219353
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-1.175772
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-1.174888
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-1.167054
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-1.096425
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-1.385685
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-1.729341
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-1.833401
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-1.175923
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-1.158696
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-1.164933
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-1.168316
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-1.104583
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-1.176969
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-1.728970
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-1.836760
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-1.158574
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.006218
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.011008
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-1.131914
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-1.086821
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-1.175889
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-1.867608
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-2.094170
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.008636
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-1.077989
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-1.078349
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-1.082728
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-1.130970
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-1.632193
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-1.783314
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-1.827160
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-1.077956
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-1.195451
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-1.194277
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-1.185256
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-1.111198
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-1.408079
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-1.724706
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-1.827635
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-1.195427
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-1.185911
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-1.193278
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-1.196159
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-1.127744
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-1.178683
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-1.721960
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-1.830423
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-1.187541
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.009450
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.008128
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-1.165709
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-1.113942
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-1.168119
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-2.096887
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-2.562359
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.008343
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-1.029645
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-1.029613
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-1.029488
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-1.043760
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-1.576622
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-1.789513
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-1.855360
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-1.029649
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-1.199211
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-1.198080
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-1.191762
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-1.125761
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-1.431871
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-1.752836
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-1.856709
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-1.199243
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-1.203360
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-1.210089
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-1.211612
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-1.134835
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-1.202339
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-1.752519
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-1.868193
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-1.204294
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.010448
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.008782
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-1.215590
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-1.129617
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-1.195773
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-2.332974
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-3.053675
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.010754

Best validation score after 20 epochs: -0.006218. Best configuration:
Width:256, lr:1.0, w_d:0.0001
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.014181550592184067, score_val == -0.005733210127800703, score_test == -0.006560382898896933
Best params for NTK: {'C': 0.1}
Best score for NTK: -0.011862572949386717
Best params for RBF: {'C': 100.0, 'gamma': 1.0}
Best score for RBF: -0.34029037041093496
Best kernel: ntk
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.01204396961602858, score_val == 0.0037156398212459304, score_test == 0.004447529927705999
