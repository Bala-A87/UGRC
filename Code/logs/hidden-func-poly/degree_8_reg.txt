X.shape == torch.Size([10000, 100])
scale_factor == 0.0473104864358902
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.228874
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.228875
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.228900
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.229412
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.230402
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.226760
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.223973
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.228874
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.223927
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.223925
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.223877
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.226063
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.224053
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.222465
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.222398
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.223927
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.224190
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.223681
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.223891
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.223398
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.222929
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.222486
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.222404
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.224248
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.266986
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.275038
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.224021
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.223900
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.223390
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.221913
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.222971
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.271942
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.224450
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.224447
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.224439
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.224456
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.224017
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.222746
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.221689
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.224450
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.223260
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.223232
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.223131
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.223249
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.222453
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.221700
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.221611
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.223261
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.223903
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.223563
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.223071
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.222813
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.222270
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.221718
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.221591
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.223957
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.257401
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.275236
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.223486
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.223381
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.222267
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.221385
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.223194
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.256771
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.224343
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.224338
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.224305
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.224069
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.223523
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.223565
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.223625
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.224344
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.224953
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.224931
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.224914
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.223919
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.224035
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.223718
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.223631
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.224963
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.226688
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.226132
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.224867
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.224888
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.224344
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.223802
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.223622
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.226857
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.260462
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.281060
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.227017
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.226611
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.225220
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.224840
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.229946
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.252696
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.224310
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.224308
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.224311
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.224332
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.224084
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.223928
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.223752
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.224310
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.224267
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.224254
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.224462
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.224373
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.224230
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.223820
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.223750
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.224272
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.226205
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.225538
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.224776
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.224768
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.224267
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.223825
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.223775
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.226105
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.255811
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.288697
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.225179
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.225130
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.224447
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.270832
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-0.371208
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.251335

Best validation score after 20 epochs: -0.221385. Best configuration:
Width:256, lr:1.0, w_d:10.0
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.21258662641048431, score_val == -0.22229260206222534, score_test == -0.20743069052696228
Best params for NTK: {'C': 0.0001}
Best score for NTK: -0.21314540226820106
Best params for RBF: {'C': 10.0, 'gamma': 100.0}
Best score for RBF: -0.21259793609374333
Best kernel: rbf
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.009222559953998236, score_val == 0.22210340492881434, score_test == 0.20763077372910455
