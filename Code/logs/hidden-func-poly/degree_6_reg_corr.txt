X.shape == torch.Size([10000, 100])
scale_factor == 0.004732361529022455
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.583264
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.583286
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.583555
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.586396
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.603529
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.598691
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.592334
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.583263
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.603084
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.602776
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.599735
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.572151
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.573395
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.578899
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.583469
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.603142
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.217224
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.290328
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.599340
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.591527
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.567111
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.578885
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.583746
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.209913
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.072036
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.194396
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.601791
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.590550
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.567124
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.587192
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.608464
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.050158
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.574862
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.574876
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.575021
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.576792
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.591630
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.591984
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.588811
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.574861
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.615119
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.614771
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.612109
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.580654
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.576068
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.583947
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.588233
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.615166
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.246441
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.319355
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.614823
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.601096
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.573866
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.583996
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.588745
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.240910
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.060083
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.190367
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.618254
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.603966
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.573887
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.610355
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.661158
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.038937
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.566948
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.566920
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.566605
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.563610
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.570301
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.575185
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.578448
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.566953
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.600808
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.600812
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.598828
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.569064
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.563742
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.573973
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.578485
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.600772
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.163946
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.200895
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.598953
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.588278
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.562602
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.573881
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.579006
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.161904
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.034068
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.189262
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.602597
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.591714
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.562741
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.609313
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.707886
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.019694
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.589113
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.588984
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.588139
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.580784
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.587470
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.594153
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.595433
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.589128
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.609644
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.609976
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.608915
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.581283
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.579752
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.590572
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.595510
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.609693
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.262069
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.216507
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.604572
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.599487
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.576831
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.590792
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.597225
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.267138
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.044342
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.297135
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.610834
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.598104
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.576853
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.763948
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-1.145119
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.031028

Best validation score after 20 epochs: -0.019694. Best configuration:
Width:512, lr:1.0, w_d:0.0
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.011394327506422997, score_val == -0.0010402901098132133, score_test == -0.001399154425598681
Best params for NTK: {'C': 1.0}
Best score for NTK: -0.008855850272572081
Best params for RBF: {'C': 10.0, 'gamma': 'scale'}
Best score for RBF: -0.00970608827661493
Best kernel: ntk
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.006289406098949829, score_val == 0.0018605567367982198, score_test == 0.00182423770027849
