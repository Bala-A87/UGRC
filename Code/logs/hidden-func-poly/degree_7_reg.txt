X.shape == torch.Size([10000, 100])
scale_factor == 0.0473104864358902
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 100]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 100]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 100]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.337513
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.337514
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.337525
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.337785
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.338215
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.336119
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.335136
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.337513
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.334133
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.334169
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.334466
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.335995
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.335162
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.335550
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.335612
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.334130
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.352125
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.342493
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.331698
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.335118
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.335298
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.335550
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.335635
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.353282
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.148059
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.210877
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.316445
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.335112
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.335299
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.336362
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.336899
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.147119
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.335347
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.335350
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.335375
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.335613
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.335860
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.335896
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.336501
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.335347
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.334092
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.334165
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.334801
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.335853
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.336003
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.336548
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.336620
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.334082
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.366336
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.354929
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.331399
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.335952
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.336211
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.336542
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.336694
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.367768
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.151240
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.113394
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.317526
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.335947
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.336284
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.337785
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.341932
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.154499
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.339021
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.339025
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.339062
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.339388
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.340004
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.339972
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.339864
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.339020
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.337448
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.337529
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.338219
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.339741
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.339689
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.339809
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.339862
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.337440
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.382936
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.370897
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.334019
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.339423
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.339577
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.339789
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.339942
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.384498
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.146990
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.110032
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.321843
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.339413
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.339483
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.349830
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.403394
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.148585
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.339884
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.339886
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.339905
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.340076
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.340465
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.340630
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.340910
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.339884
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.337452
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.337562
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.338585
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.340316
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.340478
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.340833
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.340916
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.337446
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.386619
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.373470
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.333223
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.340182
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.340505
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.340892
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.341025
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.387603
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.153386
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.122800
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.319781
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.340667
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.341349
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.349023
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-0.369684
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.160270

Best validation score after 20 epochs: -0.110032. Best configuration:
Width:512, lr:1.0, w_d:0.001
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.1208047941327095, score_val == -0.12794536352157593, score_test == -0.1524735391139984
Best params for NTK: {'C': 100.0}
Best score for NTK: -0.10834566688784861
Best params for RBF: {'C': 0.1, 'gamma': 10.0}
Best score for RBF: -0.33865653985215755
Best kernel: ntk
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.09278737132811424, score_val == 0.12855183073993579, score_test == 0.13503790265313223
