X.shape == torch.Size([10000, 1])
scale_factor == 0.46333059668540955
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 1]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 1]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 1]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.098678
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.098681
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.098748
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.098772
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.098282
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.097957
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.097671
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.098679
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.096126
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.096257
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.097187
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.095160
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.094577
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.094880
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.094970
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.096106
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.079661
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.086482
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.092503
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.094859
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.094882
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.094931
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.094969
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.078992
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.065076
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.063275
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.088340
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.094774
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.094782
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.094749
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.094682
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.068611
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.099001
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.098991
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.098890
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.098435
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.097752
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.096693
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.096748
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.099003
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.094885
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.094893
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.094764
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.095527
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.096713
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.096919
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.097049
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.094907
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.094743
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.096283
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.092611
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.096972
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.096983
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.097034
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.097083
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.088556
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.077654
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.075298
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.091079
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.096914
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.096917
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.096098
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.095776
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.082513
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.091956
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.091954
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.091998
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.091831
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.092721
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.094179
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.094592
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.091951
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.090363
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.090439
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.090830
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.092587
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.094259
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.094705
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.094766
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.090328
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.069770
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.075719
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.092647
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.094643
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.094663
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.094738
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.094784
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.068907
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.069732
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.063258
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.089551
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.094728
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.094765
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.140136
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.145055
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.088251
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.093257
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.093270
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.093364
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.093874
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.095523
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.095380
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.094603
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.093254
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.095426
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.095122
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.095613
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.092131
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.094445
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.094634
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.094711
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.095499
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.080559
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.067470
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.094841
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.094643
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.094665
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.094719
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.094747
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.082475
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.103918
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.064757
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.089080
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.094623
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.094623
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.307465
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-0.360307
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.134562

Best validation score after 20 epochs: -0.063258. Best configuration:
Width:512, lr:1.0, w_d:0.001
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.22695988416671753, score_val == -0.06835975497961044, score_test == -0.02828347310423851
Best params for NTK: {'C': 1.0}
Best score for NTK: -0.22488028007416916
Best params for RBF: {'C': 100.0, 'gamma': 10.0}
Best score for RBF: -0.02283728649573478
Best kernel: rbf
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.00950201004977018, score_val == 0.6355650766641979, score_test == 0.008122349896018871
