X.shape == torch.Size([10000, 1])
scale_factor == 0.46333059668540955
Y.shape == torch.Size([10000, 1])
X_train.shape == torch.Size([8000, 1]), Y_train.shape == torch.Size([8000, 1])
X_val.shape == torch.Size([1000, 1]), Y_val.shape == torch.Size([1000, 1])
X_test.shape == torch.Size([1000, 1]), Y_test.shape == torch.Size([1000, 1])
Cross-validating across 128 models.
[1/128]	Width:128, lr:0.001, w_d:0.0001 => Score:-0.195178
[2/128]	Width:128, lr:0.001, w_d:0.001 => Score:-0.195176
[3/128]	Width:128, lr:0.001, w_d:0.01 => Score:-0.195234
[4/128]	Width:128, lr:0.001, w_d:0.1 => Score:-0.195318
[5/128]	Width:128, lr:0.001, w_d:1.0 => Score:-0.195091
[6/128]	Width:128, lr:0.001, w_d:10.0 => Score:-0.193326
[7/128]	Width:128, lr:0.001, w_d:100.0 => Score:-0.192554
[8/128]	Width:128, lr:0.001, w_d:0.0 => Score:-0.195179
[9/128]	Width:128, lr:0.01, w_d:0.0001 => Score:-0.185609
[10/128]	Width:128, lr:0.01, w_d:0.001 => Score:-0.185871
[11/128]	Width:128, lr:0.01, w_d:0.01 => Score:-0.187341
[12/128]	Width:128, lr:0.01, w_d:0.1 => Score:-0.189682
[13/128]	Width:128, lr:0.01, w_d:1.0 => Score:-0.189918
[14/128]	Width:128, lr:0.01, w_d:10.0 => Score:-0.189907
[15/128]	Width:128, lr:0.01, w_d:100.0 => Score:-0.189903
[16/128]	Width:128, lr:0.01, w_d:0.0 => Score:-0.185605
[17/128]	Width:128, lr:0.1, w_d:0.0001 => Score:-0.160843
[18/128]	Width:128, lr:0.1, w_d:0.001 => Score:-0.158450
[19/128]	Width:128, lr:0.1, w_d:0.01 => Score:-0.160662
[20/128]	Width:128, lr:0.1, w_d:0.1 => Score:-0.189809
[21/128]	Width:128, lr:0.1, w_d:1.0 => Score:-0.189845
[22/128]	Width:128, lr:0.1, w_d:10.0 => Score:-0.189911
[23/128]	Width:128, lr:0.1, w_d:100.0 => Score:-0.189880
[24/128]	Width:128, lr:0.1, w_d:0.0 => Score:-0.161154
[25/128]	Width:128, lr:1.0, w_d:0.0001 => Score:-0.265338
[26/128]	Width:128, lr:1.0, w_d:0.001 => Score:-0.177055
[27/128]	Width:128, lr:1.0, w_d:0.01 => Score:-0.145806
[28/128]	Width:128, lr:1.0, w_d:0.1 => Score:-0.190035
[29/128]	Width:128, lr:1.0, w_d:1.0 => Score:-0.190083
[30/128]	Width:128, lr:1.0, w_d:10.0 => Score:-0.189311
[31/128]	Width:128, lr:1.0, w_d:100.0 => Score:-0.190111
[32/128]	Width:128, lr:1.0, w_d:0.0 => Score:-0.252223
[33/128]	Width:256, lr:0.001, w_d:0.0001 => Score:-0.201232
[34/128]	Width:256, lr:0.001, w_d:0.001 => Score:-0.201209
[35/128]	Width:256, lr:0.001, w_d:0.01 => Score:-0.201105
[36/128]	Width:256, lr:0.001, w_d:0.1 => Score:-0.201191
[37/128]	Width:256, lr:0.001, w_d:1.0 => Score:-0.201043
[38/128]	Width:256, lr:0.001, w_d:10.0 => Score:-0.200901
[39/128]	Width:256, lr:0.001, w_d:100.0 => Score:-0.200815
[40/128]	Width:256, lr:0.001, w_d:0.0 => Score:-0.201236
[41/128]	Width:256, lr:0.01, w_d:0.0001 => Score:-0.182377
[42/128]	Width:256, lr:0.01, w_d:0.001 => Score:-0.182754
[43/128]	Width:256, lr:0.01, w_d:0.01 => Score:-0.186892
[44/128]	Width:256, lr:0.01, w_d:0.1 => Score:-0.201098
[45/128]	Width:256, lr:0.01, w_d:1.0 => Score:-0.201667
[46/128]	Width:256, lr:0.01, w_d:10.0 => Score:-0.201310
[47/128]	Width:256, lr:0.01, w_d:100.0 => Score:-0.201197
[48/128]	Width:256, lr:0.01, w_d:0.0 => Score:-0.182366
[49/128]	Width:256, lr:0.1, w_d:0.0001 => Score:-0.166130
[50/128]	Width:256, lr:0.1, w_d:0.001 => Score:-0.168408
[51/128]	Width:256, lr:0.1, w_d:0.01 => Score:-0.166296
[52/128]	Width:256, lr:0.1, w_d:0.1 => Score:-0.201079
[53/128]	Width:256, lr:0.1, w_d:1.0 => Score:-0.201119
[54/128]	Width:256, lr:0.1, w_d:10.0 => Score:-0.201182
[55/128]	Width:256, lr:0.1, w_d:100.0 => Score:-0.201113
[56/128]	Width:256, lr:0.1, w_d:0.0 => Score:-0.166194
[57/128]	Width:256, lr:1.0, w_d:0.0001 => Score:-0.238795
[58/128]	Width:256, lr:1.0, w_d:0.001 => Score:-0.177307
[59/128]	Width:256, lr:1.0, w_d:0.01 => Score:-0.168185
[60/128]	Width:256, lr:1.0, w_d:0.1 => Score:-0.202450
[61/128]	Width:256, lr:1.0, w_d:1.0 => Score:-0.202041
[62/128]	Width:256, lr:1.0, w_d:10.0 => Score:-0.200451
[63/128]	Width:256, lr:1.0, w_d:100.0 => Score:-0.200282
[64/128]	Width:256, lr:1.0, w_d:0.0 => Score:-0.236466
[65/128]	Width:512, lr:0.001, w_d:0.0001 => Score:-0.187119
[66/128]	Width:512, lr:0.001, w_d:0.001 => Score:-0.187128
[67/128]	Width:512, lr:0.001, w_d:0.01 => Score:-0.187261
[68/128]	Width:512, lr:0.001, w_d:0.1 => Score:-0.187729
[69/128]	Width:512, lr:0.001, w_d:1.0 => Score:-0.188916
[70/128]	Width:512, lr:0.001, w_d:10.0 => Score:-0.190139
[71/128]	Width:512, lr:0.001, w_d:100.0 => Score:-0.189213
[72/128]	Width:512, lr:0.001, w_d:0.0 => Score:-0.187114
[73/128]	Width:512, lr:0.01, w_d:0.0001 => Score:-0.156887
[74/128]	Width:512, lr:0.01, w_d:0.001 => Score:-0.157702
[75/128]	Width:512, lr:0.01, w_d:0.01 => Score:-0.164518
[76/128]	Width:512, lr:0.01, w_d:0.1 => Score:-0.189742
[77/128]	Width:512, lr:0.01, w_d:1.0 => Score:-0.191651
[78/128]	Width:512, lr:0.01, w_d:10.0 => Score:-0.189431
[79/128]	Width:512, lr:0.01, w_d:100.0 => Score:-0.189129
[80/128]	Width:512, lr:0.01, w_d:0.0 => Score:-0.156872
[81/128]	Width:512, lr:0.1, w_d:0.0001 => Score:-0.167508
[82/128]	Width:512, lr:0.1, w_d:0.001 => Score:-0.153754
[83/128]	Width:512, lr:0.1, w_d:0.01 => Score:-0.146509
[84/128]	Width:512, lr:0.1, w_d:0.1 => Score:-0.188934
[85/128]	Width:512, lr:0.1, w_d:1.0 => Score:-0.188964
[86/128]	Width:512, lr:0.1, w_d:10.0 => Score:-0.189025
[87/128]	Width:512, lr:0.1, w_d:100.0 => Score:-0.189009
[88/128]	Width:512, lr:0.1, w_d:0.0 => Score:-0.168602
[89/128]	Width:512, lr:1.0, w_d:0.0001 => Score:-0.244154
[90/128]	Width:512, lr:1.0, w_d:0.001 => Score:-0.177282
[91/128]	Width:512, lr:1.0, w_d:0.01 => Score:-0.147653
[92/128]	Width:512, lr:1.0, w_d:0.1 => Score:-0.189525
[93/128]	Width:512, lr:1.0, w_d:1.0 => Score:-0.189481
[94/128]	Width:512, lr:1.0, w_d:10.0 => Score:-0.187025
[95/128]	Width:512, lr:1.0, w_d:100.0 => Score:-0.192866
[96/128]	Width:512, lr:1.0, w_d:0.0 => Score:-0.262967
[97/128]	Width:1024, lr:0.001, w_d:0.0001 => Score:-0.186734
[98/128]	Width:1024, lr:0.001, w_d:0.001 => Score:-0.186792
[99/128]	Width:1024, lr:0.001, w_d:0.01 => Score:-0.187164
[100/128]	Width:1024, lr:0.001, w_d:0.1 => Score:-0.189419
[101/128]	Width:1024, lr:0.001, w_d:1.0 => Score:-0.192402
[102/128]	Width:1024, lr:0.001, w_d:10.0 => Score:-0.192122
[103/128]	Width:1024, lr:0.001, w_d:100.0 => Score:-0.189481
[104/128]	Width:1024, lr:0.001, w_d:0.0 => Score:-0.186742
[105/128]	Width:1024, lr:0.01, w_d:0.0001 => Score:-0.143808
[106/128]	Width:1024, lr:0.01, w_d:0.001 => Score:-0.143449
[107/128]	Width:1024, lr:0.01, w_d:0.01 => Score:-0.146102
[108/128]	Width:1024, lr:0.01, w_d:0.1 => Score:-0.187460
[109/128]	Width:1024, lr:0.01, w_d:1.0 => Score:-0.192973
[110/128]	Width:1024, lr:0.01, w_d:10.0 => Score:-0.189757
[111/128]	Width:1024, lr:0.01, w_d:100.0 => Score:-0.189152
[112/128]	Width:1024, lr:0.01, w_d:0.0 => Score:-0.143800
[113/128]	Width:1024, lr:0.1, w_d:0.0001 => Score:-0.208316
[114/128]	Width:1024, lr:0.1, w_d:0.001 => Score:-0.182207
[115/128]	Width:1024, lr:0.1, w_d:0.01 => Score:-0.146902
[116/128]	Width:1024, lr:0.1, w_d:0.1 => Score:-0.188957
[117/128]	Width:1024, lr:0.1, w_d:1.0 => Score:-0.188988
[118/128]	Width:1024, lr:0.1, w_d:10.0 => Score:-0.189042
[119/128]	Width:1024, lr:0.1, w_d:100.0 => Score:-0.188977
[120/128]	Width:1024, lr:0.1, w_d:0.0 => Score:-0.208248
[121/128]	Width:1024, lr:1.0, w_d:0.0001 => Score:-0.213896
[122/128]	Width:1024, lr:1.0, w_d:0.001 => Score:-0.174631
[123/128]	Width:1024, lr:1.0, w_d:0.01 => Score:-0.148526
[124/128]	Width:1024, lr:1.0, w_d:0.1 => Score:-0.189438
[125/128]	Width:1024, lr:1.0, w_d:1.0 => Score:-0.189290
[126/128]	Width:1024, lr:1.0, w_d:10.0 => Score:-0.189072
[127/128]	Width:1024, lr:1.0, w_d:100.0 => Score:-0.222229
[128/128]	Width:1024, lr:1.0, w_d:0.0 => Score:-0.180729

Best validation score after 20 epochs: -0.143449. Best configuration:
Width:1024, lr:0.01, w_d:0.001
preds_train_nn.shape == torch.Size([8000, 1]), preds_val_nn.shape == torch.Size([1000, 1]), preds_test_nn.shape == torch.Size([1000, 1])
score_train == -0.12218083441257477, score_val == -0.20240527391433716, score_test == -0.011953541077673435
Best params for NTK: {'C': 100.0}
Best score for NTK: -0.018904259516552953
Best params for RBF: {'C': 100.0, 'gamma': 'scale'}
Best score for RBF: -0.006987168225937496
Best kernel: rbf
preds_train_km.shape == (8000,), preds_val_km.shape == (1000,), preds_test_km.shape == (1000,)
score_train == 0.007001156028975474, score_val == 0.32214268716421135, score_test == 0.0070988201239600545
